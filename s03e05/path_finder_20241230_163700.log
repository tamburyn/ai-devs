2024-12-30 16:37:00,482 - INFO - Successfully connected to Neo4j
2024-12-30 16:37:00,482 - INFO - Sending query to API: SELECT id, username FROM users
2024-12-30 16:37:00,869 - INFO - API response status: 200
2024-12-30 16:37:00,870 - INFO - Sending query to API: SELECT user1_id, user2_id FROM connections
2024-12-30 16:37:01,214 - INFO - API response status: 200
2024-12-30 16:37:01,215 - INFO - Processed users: 98, connections: 151
2024-12-30 16:37:01,215 - INFO - Attempting to connect to Neo4j...
2024-12-30 16:37:01,215 - INFO - Testing connection...
2024-12-30 16:37:01,217 - INFO - Connection test result: <Record test=1>
2024-12-30 16:37:01,217 - INFO - Clearing existing data from Neo4j...
2024-12-30 16:37:01,224 - INFO - Creating 98 users in Neo4j...
2024-12-30 16:37:01,624 - INFO - Creating 151 connections in Neo4j...
2024-12-30 16:37:02,235 - INFO - Successfully set up Neo4j database
2024-12-30 16:37:02,239 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.UnboundedVariableLengthPattern} {category: PERFORMANCE} {title: The provided pattern is unbounded, consider adding an upper limit to the number of node hops.} {description: Using shortest path with an unbounded pattern will likely result in long execution times. It is recommended to use an upper limit to the number of node hops in your pattern.} {position: line: 3, column: 25, offset: 67} for query: "\n                    MATCH p=shortestPath(\n                        (start:Person)-[:KNOWS*]-(end:Person)\n                    )\n                    WHERE toLower(start.name) = 'rafal' \n                    AND toLower(end.name) = 'barbara'\n                    RETURN [node in nodes(p) | node.name] as path\n                "
2024-12-30 16:37:02,239 - ERROR - Failed to find path between Rafal and Barbara
